#!/bin/bash
#
#                        ##########################
#                        #      robotag v.2       #
#                        #    By: Brian Carter    #
#                        # robotmachine@gmail.com #
#                        ##########################
#
## Creates clean id3 tags based on directory structure, file names, and more!
## Dependencies: 
## * eyeD3 <http://eyed3.nicfit.net> (Tested with eyeD3 version 0.7.5-final)
## * Image Magick <http://imagemagick.org>
## * glyr <http://github.com/sahib/glyr>
#
## MP3s can be anywhere in the file system, but the script is looking for a structure like this:
## $MP3_ROOT/Artist Name/YYYY Title of Album/DD-TT Track Name.mp3
## YYYY is the four digit release year. DD is the two digit disc number. TT is the two digit track number. If there is only one disc, then "TT Track Name.mp3" is fine.
## /home/robot/music/Radiohead/2007 In Rainbows/02-05 Last Flowers.mp3
#
## Unset variables
unset GENRE ARTIST DISC DISCS YEAR COUNTRY MULTID MAXDISC
#
## Set Encoding
ENC='utf8'
#
## Setting Genre.
## Looks in the current directory for '.genre.txt' and then in the next folder up. If neither exists then everything entered as an argument is used.
## ie. `robotag Trip Hop` would set $GENRE to 'Trip Hop'
if [[ -f .genre.txt ]] ; then 
	GENRE=$(head -n 1 .genre.txt)
elif [[ -f ../.genre.txt ]] ; then 
	GENRE=$(head -n 1 ../.genre.txt)
else 
	GENRE="$@"
fi
#
## Set artist name.
if [[ -f .artist.txt ]] ; then 
	ARTIST=$(head -n 1 .artist.txt)
elif [[ -f ../.artist.txt ]] ; then
	ARTIST=$(head -n 1 ../.artist.txt)
else 
	ARTIST="$(pwd | awk -F \/ '{ print $(NF-1) }')"
fi
#
## Set album artist to artist unless an album artist file exists.
if [[ -f .albumartist.txt ]] ; then 
	ALBUMARTIST=$(head -n 1 .albumartist.txt)
else 
	ALBUMARTIST=$ARTIST
fi
#
## Sets year.
if [[ -f .year.txt ]] ; then
	YEAR="$(head -n 1 .year.txt)"
else 
	YEAR="$(pwd | awk -F \/ '{ print $NF }' | cut -c 1-4)"
fi 
## If the year is 0000 based on the folder name or .year.txt file it will unset it (for unsorted or non-album tracks)
if [[ "$YEAR" = "0000" ]] ; then 
	unset YEAR
fi
#
## Set album title.
if [[ -f .album.txt ]] ; then 
	ALBUM=$(head -n 1 .album.txt)
else
	ALBUM="$(pwd | awk -F \/ '{ print $NF }' | sed 's/.....\(.*\)/\1/' | sed 's@_@/@g' | sed 's/¿/?/g')"
fi
#
## Checks to see if the current album has more than one disc.
MULTICHECK=$(find *.mp3 -print -quit)
if [ "$(echo ${MULTICHECK:2:1})" == "-" ] ; then 
	MULTID=true
else
	MULTID=false
fi
#
## Checks for album art in folder.
COVERFILE=$(find {cover,folder}.{jpeg,jpg,png,gif} -print -quit)
## Uses glyr to search the internet and download a cover if one isn't there. Comment this line out if you don't want this to happen.
if [[ ! "$COVERFILE" ]] ; then 
	unset COVERFILE
	glyrc cover -v 0 -a "$ARTIST" -b "$ALBUM" -w cover.:format:
	COVERFILE=cover.jpg
fi
##
## Use ImageMagick to convert large images to smaller thumbnails.
MAXSIZE=100
COVERSIZE=$(du -k $COVERFILE | cut -f 1)
if [[ $COVERSIZE -ge $MAXSIZE ]] ; then
	convert $COVERFILE -resize 500x500 .cover_thumb.jpg
	unset COVERFILE
	COVERFILE=.cover_thumb.jpg
fi
if [[ ! -f $COVERFILE ]]; then
	unset COVERFILE
fi
#
## Clears all existing id3 tags
echo "Removing existing tags..."
eyeD3 --remove-all -Q *.mp3
echo "Existing tags removed."
#
## If there is only one disc, then we can stop here and write tags.
if ! $MULTID ; then 
	
	x="1" && TOTALTRACK="$(ls -l *.mp3 | wc -l | tr -d ' ')"
	## Creates an array from .tracks1.txt if it exists
	if [[ -e .tracks1.txt ]]; then
		mapfile -t TRACKS < .tracks1.txt
	fi
	for MP3 in *.mp3; do 
		## If $TRACKS is not set, the file name is used minus the first three characters (removing the track number)
		if [[ ! $TRACKS ]] ; then
			TNAME=$(echo $MP3 | sed 's/...\(.*\)/\1/' | sed 's/.mp3//g' | sed 's/.mp3//g' | sed 's@_@/@g' | sed 's/¿/?/g')
		else
			TNAME=${TRACKS[$(eval $x-1]}
		fi
		if [[ -e .anames01.txt ]]; then
			mapfile -t ANARR < .anames01.txt
		fi
		if [[ $ANARR ]] ; then
			if [[ ${ANARR[$(expr $x-1)]} != 'NA' ]] ; then
				ALBUMARTIST="$ARTIST ${ANARR[$(expr $x-1)]}"
			else
				ALBUMARTIST=$ARTIST
			fi
		fi
		eyeD3 --fs-encoding="$ENC" \
			-a "$ALBUMARTIST" \
			-b "$ARTIST" \
			-A "$ALBUM" \
			-G "$GENRE" \
			--recording-date "$YEAR" \
			-t "$TNAME" \
			-n "$x" \
			-N "$TOTALTRACK" \
			-d 01 \
			-D 01 \
			--add-image=$COVERFILE:FRONT_COVER "$MP3"
		x=$[$x+1]
		done 
	exit 
fi
#
## If there are multiple discs, the following is done
## Sets max disc number based on number present.
if $MULTID ; then 
	DISCARRAY=()
	for x in *.mp3 ; do
		DISCARRAY+=($(echo ${x:0:2}))
	done
	IFS=$'\n'
	MAXDISC=$(echo "${DISCARRAY[*]}" | sort -n | tail -1)
fi
#
DISC=$MAXDISC
while [[ "$DISC" -gt 0 ]] ; do 
	x="1" && TOTALTRACK="$(ls -l $(printf "%02d\n" $DISC)-*.mp3 | wc -l | tr -d ' ')" 
	if [[ -e .tracks$DISC.txt ]] ; then
		mapfile -t TRACKS < .tracks$DISC.txt
	fi
	for MP3 in $(printf "%02d\n" $DISC)-*.mp3 ; do 
		if [[ ! $TRACKS ]] ; then
			TNAME=$(echo $MP3 | sed 's/......\(.*\)/\1/' | sed 's/.mp3//g' | sed 's@_@/@g' | sed 's/¿/?/g')
		else
			TNAME=${TRACKS[$(eval $x-1)]}
		fi
		eyeD3 --fs-encoding="$ENC" \
		-a "$ALBUMARTIST" \
		-b "$ARTIST" \
		-A "$ALBUM" \
		-G "$GENRE" \
		--recording-date "$YEAR" \
		-t "$TNAME" \
		-n "$x" \
		-N "$TOTALTRACK" \
		-d "$DISC" \
		-D "$MAXDISC" \
		--add-image=$COVERFILE:FRONT_COVER "$MP3"
		x=$[$x+1] 
	done
	DISC=$[$DISC-1]
done
